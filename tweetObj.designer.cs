#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace theTrumpButton
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Tweets")]
	public partial class tweetObjDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTweetFave(TweetFave instance);
    partial void UpdateTweetFave(TweetFave instance);
    partial void DeleteTweetFave(TweetFave instance);
    #endregion
		
		public tweetObjDataContext() : 
				base(global::theTrumpButton.Properties.Settings.Default.TweetsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tweetObjDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tweetObjDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tweetObjDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tweetObjDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TweetFave> TweetFaves
		{
			get
			{
				return this.GetTable<TweetFave>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TweetFaves")]
	public partial class TweetFave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _userName;
		
		private string _name;
		
		private System.DateTime _dateTweeted;
		
		private string _tweetBody;
		
		private string _tweetID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndateTweetedChanging(System.DateTime value);
    partial void OndateTweetedChanged();
    partial void OntweetBodyChanging(string value);
    partial void OntweetBodyChanged();
    partial void OntweetIDChanging(string value);
    partial void OntweetIDChanged();
    #endregion
		
		public TweetFave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTweeted", DbType="DateTime NOT NULL")]
		public System.DateTime dateTweeted
		{
			get
			{
				return this._dateTweeted;
			}
			set
			{
				if ((this._dateTweeted != value))
				{
					this.OndateTweetedChanging(value);
					this.SendPropertyChanging();
					this._dateTweeted = value;
					this.SendPropertyChanged("dateTweeted");
					this.OndateTweetedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tweetBody", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string tweetBody
		{
			get
			{
				return this._tweetBody;
			}
			set
			{
				if ((this._tweetBody != value))
				{
					this.OntweetBodyChanging(value);
					this.SendPropertyChanging();
					this._tweetBody = value;
					this.SendPropertyChanged("tweetBody");
					this.OntweetBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tweetID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string tweetID
		{
			get
			{
				return this._tweetID;
			}
			set
			{
				if ((this._tweetID != value))
				{
					this.OntweetIDChanging(value);
					this.SendPropertyChanging();
					this._tweetID = value;
					this.SendPropertyChanged("tweetID");
					this.OntweetIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
